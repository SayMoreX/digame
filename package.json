{
  "main": "./app/main-bundle.js",
  "scripts": {
    "clear_jest": "jest --clearCache",
    "//test is what travis will run": "",
    "test": "npm run test-unit",
    "test-all": "npm run test-unit && npm run build && npm run test-e2e",
    "test-unit": "npm run clear_jest && cross-env NODE_ENV=test node --trace-warnings ./test/runTests.js unit",
    "test-unit-watch": "npm run clear_jest && cross-env NODE_ENV=test node --trace-warnings ./test/runTests.js unit --watch",
    "//note that e2e tests require that you run build to pick up new code in the app (but not in the e2e tests themselves)": "",
    "test-e2e": "npm run clear_jest && cross-env NODE_ENV=test node --trace-warnings ./test/runTests.js e2e",
    "test-e2e-watch": "npm run clear_jest && cross-env NODE_ENV=test node --trace-warnings ./test/runTests.js e2e --watch",
    "spectron-repl": "cross-env NODE_ENV=development npm start ./spectron-repl.js",
    "//----watch": "The nature of watch is that we can't run two commands, so you'll have to have 2 terminals if you want to watch both",
    "//----watch ": "note that the development config doesn't actually write out a file, that's why these are using production",
    "watch-renderer": "cross-env NODE_ENV=test node ./node_modules/webpack/bin/webpack --watch --info-verbosity verbose --config webpack.renderer-process.production.js",
    "watch-main": "yarn webpack --watch --info-verbosity verbose --config webpack.main-process.js",
    "build:stats": "webpack --json --config webpack.renderer-process.production.js > stats.json",
    "//----build-production": "our app (like all electron apps) has 2 parts: the electron process ('main') & the web app ('renderer')",
    "build-dev-main": "cross-env NODE_ENV=development node ./node_modules/webpack/bin/webpack --config webpack.main-process.js --colors",
    "build-production-main": "cross-env NODE_ENV=production node ./node_modules/webpack/bin/webpack --config webpack.main-process.js --colors",
    "build-production-renderer": "cross-env NODE_ENV=production node ./node_modules/webpack/bin/webpack --config webpack.renderer-process.production.js --colors",
    "//---build-is-what-github-actions-runs": "",
    "build": "npm run lingui-compile && npm run build-production-main && npm run build-production-renderer && npm run test-unit",
    "build-without-test": "npm run lingui-compile && npm run build-production-main && npm run build-production-renderer",
    "start": "cross-env NODE_ENV=production electron ./app/",
    "start-hot": "cross-env HOT=1 NODE_ENV=development electron ./app",
    "start-hot-vscode": "cross-env HOT=1 NODE_ENV=development electron --remote-debugging-port=9223 ./app/main-bundle",
    "//postinstall": "I don't like doing a build after every npm install: npm run build",
    "postinstall": "",
    "hot-server": "cross-env ELECTRON_DISABLE_SECURITY_WARNINGS=1  NODE_ENV=development node --max_old_space_size=2096 server.js",
    "//----dev": "this is the normal day-to-day way of running while developing, with compiling of main, preload, and render, but hot-loading of render process only. For attempt at hot-loading everything, see webpack.for-dev-mode.js",
    "dev": "yarn lingui-compile && yarn build-dev-main && npm run hot-server -- --start-hot",
    "dev-renderer-only": "npm run hot-server -- --start-hot",
    "dev-vscode": "npm run hot-server -- --start-hot-vscode",
    "//----packaging": "The electron-builder configuration is in the unfortunately named 'build' section below",
    "clean": "node clean.js",
    "make-sentry-release": "./make-sentry-release.sh",
    "package": "node clean.js && npm run build-without-test && electron-builder --publish never",
    "package-win": "npm run build && electron-builder --win --x64",
    "package-linux": "npm run build && electron-builder --linux",
    "package-all": "npm run build-without-test && electron-builder -mwl",
    "cleanup": "mop -v",
    "tslint-check": "tslint-config-prettier-check ./tslint.json",
    "lingui-add": "lingui add-locale",
    "lingui-extract": "lingui extract",
    "lingui-compile": "lingui compile",
    "make-langindex": "ts-node --dir app/languageFinder --compiler-options \"{\\\"module\\\": \\\"commonjs\\\"}\" make-langindex",
    "storybook": "start-storybook -p 6006",
    "build-storybook": "build-storybook"
  },
  "jest": {
    "globals": {
      "ts-jest": {
        "tsConfig": "./tsconfig.json"
      }
    },
    "moduleNameMapper": {
      "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$": "<rootDir>/internals/mocks/fileMock.js",
      "\\.(css|less|sass|scss)$": "identity-obj-proxy"
    },
    "moduleFileExtensions": [
      "ts",
      "tsx",
      "js",
      "jsx",
      "json",
      "json5",
      "node",
      "xml"
    ],
    "moduleDirectories": [
      "node_modules",
      "app/node_modules"
    ],
    "transform": {
      "only using json5-jest for one file (fields.json5) because it actually chokes on other json and I haven't figured out why": "json5-jest",
      "^.+\\.json5$": "json5-jest",
      "^.+\\.(js|jsx|ts|tsx)$": "babel-jest",
      "\\.xml$": "jest-raw-loader"
    },
    "testMatch": [
      "**/?(*.)(spec|test).ts?(x)",
      "**/?(*.)(spec|test).js?(x)"
    ],
    "testURL": "http://localhost/"
  },
  "//This 'build' section is for electron-builder": "",
  "//Note that 'afterSign': 'build/notarize.js' works but has been swapped here for a form that works on github actions": "",
  "build": {
    "productName": "lameta",
    "appId": "com.github.lameta.lameta",
    "asarUnpack": [
      "node_modules/ffprobe-static/*"
    ],
    "afterSign": "electron-builder-notarize",
    "dmg": {
      "contents": [
        {
          "x": 410,
          "y": 150,
          "type": "link",
          "path": "/Applications"
        },
        {
          "x": 130,
          "y": 150,
          "type": "file"
        }
      ]
    },
    "files": [
      "dist/",
      "app.html",
      "main-bundle.js",
      "main-bundle.js.map",
      "package.json"
    ],
    "extraResources": [
      "artwork/"
    ],
    "extraFiles": [
      "sample data/",
      "assets/"
    ],
    "directories": {
      "buildResources": "resources",
      "output": "release"
    },
    "win": {
      "target": "nsis",
      "icon": "build/windows.ico",
      "extraResources": [
        "node_modules/ffprobe-static/bin/win32/x64"
      ],
      "fileAssociations": [
        {
          "ext": "sprj",
          "name": "lameta/saymore project"
        }
      ]
    },
    "nsis": {
      "artifactName": "${productName} Windows Setup ${version}.${ext}"
    },
    "mac": {
      "icon": "build/mac.icns",
      "hardenedRuntime": true,
      "artifactName": "${productName} Mac ${version}.${ext}",
      "extraResources": [
        "node_modules/ffprobe-static/bin/darwin/x64"
      ],
      "fileAssociations": [
        {
          "ext": "sprj",
          "name": "lameta/saymore project",
          "role": "Editor"
        }
      ]
    },
    "linux": {
      "target": [
        "deb",
        "AppImage"
      ],
      "extraResources": [
        "node_modules/ffprobe-static/bin/linux/x64"
      ],
      "category": "science",
      "description": "A metadata tool to help with organising collections of files. It is mainly aimed at collections made in the course of documenting language, music, and other cultural expressions.",
      "fileAssociations": [
        {
          "ext": "sprj",
          "name": "lameta/saymore project"
        }
      ]
    }
  },
  "bin": {
    "electron": "./node_modules/.bin/electron"
  },
  "license": "MIT",
  "devDependencies": {
    "@babel/core": "^7.11.6",
    "@babel/plugin-proposal-class-properties": "^7.10.4",
    "@babel/plugin-proposal-decorators": "^7.10.5",
    "@babel/plugin-transform-modules-commonjs": "^7.10.4",
    "@babel/preset-env": "^7.11.5",
    "@babel/preset-react": "^7.10.4",
    "@babel/preset-typescript": "^7.10.4",
    "@lingui/cli": "^3.9.0",
    "@storybook/addon-actions": "^6.2.9",
    "@storybook/addon-essentials": "^6.2.9",
    "@storybook/addon-links": "^6.2.9",
    "@storybook/react": "^6.2.9",
    "@types/chai": "^4.1.2",
    "@types/enzyme": "^3.1.1",
    "@types/history": "^4.5.2",
    "@types/jest": "^26.0.10",
    "@types/node": "^14.6.2",
    "@types/react": "17.0.14",
    "@types/react-dom": "17.0.9",
    "@types/react-hot-loader": "^4.1.0",
    "@types/sinon": "^2.3.1",
    "asar": "^0.13.0",
    "babel-core": "^7.0.0-bridge.0",
    "babel-jest": "^26.3.0",
    "babel-loader": "^8.1.0",
    "babel-plugin-macros": "^3.1.0",
    "babel-preset-env": "^1.7.0",
    "boiler-room-custodian": "^0.6.2",
    "chai": "^4.1.2",
    "chai-webdriverio": "^0.4.3",
    "concurrently": "^3.1.0",
    "cross-env": "^5.1.4",
    "css-loader": "^1.0.0",
    "css-modules-require-hook": "^4.0.6",
    "csv-loader": "^3.0.3",
    "devtron": "^1.4.0",
    "electron-builder": "^22.13.1",
    "electron-builder-http": "^19.27.5",
    "electron-builder-notarize": "^1.2.0",
    "electron-devtools-installer": "3.1.1",
    "enzyme": "^3.0.0",
    "enzyme-adapter-react-16": "^1.0.0",
    "express": "^4.14.0",
    "fast-sass-loader": "^1.4.5",
    "file-loader": "1.1.11",
    "fork-ts-checker-webpack-plugin": "^0.5.2",
    "html-loader": "^0.5.1",
    "html-webpack-plugin": "^3.2.0",
    "identity-obj-proxy": "^3.0.0",
    "jest": "^26.4.0",
    "jest-raw-loader": "^1.0.1",
    "json5-jest": "^1.0.1",
    "keychain": "^1.3.0",
    "markdown-loader": "^2.0.1",
    "mini-css-extract-plugin": "^0.4.1",
    "patch-package": "^6.2.2",
    "postinstall-postinstall": "^2.1.0",
    "react-hot-loader": "^4.12.3",
    "sass": "^1.54.8",
    "sass-loader": "^7.0.3",
    "sinon": "^4.0.0",
    "spectron": "^4.0.0",
    "spectron-keys": "^0.0.1",
    "speed-measure-webpack-plugin": "^1.2.3",
    "style-loader": "^0.19.0",
    "ts-jest": "^26.3.0",
    "ts-loader": "^8.0.3",
    "tslint": "^6.1.3",
    "tslint-config-prettier": "^1.18.0",
    "typescript": "^4.0.2",
    "url-loader": "4.1.0",
    "webdriverio": "^4.14.0",
    "webpack": "^4.44.1",
    "webpack-cli": "^3.1.2",
    "webpack-hot-middleware": "^2.24.3",
    "webpack-merge": "^4.1.4"
  },
  "dependencies": {
    "@babel/plugin-syntax-dynamic-import": "^7.8.3",
    "@devexpress/dx-react-core": "^2.7.6",
    "@devexpress/dx-react-grid": "^2.7.6",
    "@devexpress/dx-react-grid-material-ui": "^2.7.6",
    "@lingui/core": "^3.9.0",
    "@lingui/macro": "^3.9.0",
    "@lingui/react": "^3.9.0",
    "@material-ui/core": "^4.12.1",
    "@material-ui/icons": "^4.11.2",
    "@sentry/browser": "^6.13.3",
    "@sentry/integrations": "^6.13.3",
    "@types/archiver": "^2.1.1",
    "@types/axios": "^0.14.0",
    "@types/camelcase": "^4.1.0",
    "@types/commonmark": "^0.27.0",
    "@types/electron-store": "^3.2.0",
    "@types/filesize": "^5.0.0",
    "@types/fluent-ffmpeg": "^2.1.8",
    "@types/fs-extra": "^9.0.1",
    "@types/glob": "^5.0.33",
    "@types/image-size": "^0.0.29",
    "@types/lodash": "^4.14.165",
    "@types/mime": "^2.0.0",
    "@types/musicmetadata": "^2.0.4",
    "@types/prop-types": "^15.5.2",
    "@types/react-datepicker": "^0.55.1",
    "@types/react-dropzone": "4.1",
    "@types/react-modal": "^3.13.1",
    "@types/react-select": "^3.0.8",
    "@types/react-sidebar": "^3.0.0",
    "@types/react-table": "^7.7.1",
    "@types/react-tabs": "^2.3.1",
    "@types/sanitize-filename": "^1.1.28",
    "@types/semver": "^7.3.4",
    "@types/temp": "^0.8.31",
    "@types/webdriverio": "^4.10.0",
    "@types/xml2js": "^0.4.2",
    "@types/xmlbuilder": "^0.0.32",
    "archiver": "^2.1.1",
    "array-move": "^3.0.0",
    "assert": "^1.4.1",
    "axios": "^0.21.1",
    "axios-hooks": "^2.2.0",
    "butter-toast": "^3.3.5",
    "camelcase": "^5.0.0",
    "capital-case": "^1.0.3",
    "change-case": "^4.1.1",
    "commonmark": "^0.28.1",
    "compare-versions": "^3.6.0",
    "csv-parse": "^4.10.1",
    "date-fns": "^2.14.0",
    "electron": "^10.1.4",
    "electron-context-menu": "^0.9.1",
    "electron-debug": "^1.1.0",
    "electron-ga": "^1.0.6",
    "electron-is-dev": "^0.3.0",
    "electron-log": "^4.2.4",
    "electron-notarize": "^0.1.1",
    "electron-store": "^1.3.0",
    "emotion": "^10.0.27",
    "exifreader": "^3.11.2",
    "ffprobe-static": "^3.0.0",
    "filesize": "^6.1.0",
    "flatted": "^3.1.0",
    "fluent-ffmpeg": "^2.1.2",
    "fold-to-ascii": "^5.0.0",
    "font-awesome": "^4.7.0",
    "fs-extra": "^9.0.1",
    "glob": "^7.1.2",
    "graceful-fs": "^4.2.4",
    "history": "^4.6.1",
    "hotkeys-js": "^3.3.1",
    "humanize-duration": "^3.15.3",
    "image-size": "^0.6.1",
    "is-valid-path": "^0.1.1",
    "isemail": "^3.2.0",
    "json5-loader": "^3.0.0",
    "lodash": "^4.17.20",
    "mime": "^2.4.0",
    "mobx": "^5.11.0",
    "mobx-react": "^6.1.1",
    "mobx-react-devtools": "^6.1.1",
    "mobx-react-lite": "^1.4.1",
    "moment": "^2.19.4",
    "musicmetadata": "^2.0.5",
    "papaparse": "^5.3.1",
    "path": "^0.12.7",
    "pupa": "^2.1.1",
    "raw-loader": "^0.5.1",
    "react": "^17.0.2",
    "react-autosuggest": "^9.4.0",
    "react-close-on-escape": "^2.0.0",
    "react-datepicker": "^1.5.0",
    "react-dom": "^17.0.2",
    "react-dropzone": "4.1",
    "react-markdown": "^5.0.3",
    "react-modal": "^3.15.1",
    "react-player": "^2.9.0",
    "react-radio-group": "^3.0.3",
    "react-select": "^3.0.4",
    "react-sortable-hoc": "^1.11.0",
    "react-split-pane": "^0.1.92",
    "react-spreadsheet": "^0.5.14",
    "react-syntax-highlighter": "^8.0.1",
    "react-table": "^7.7.0",
    "react-table-6": "^6.11.0",
    "react-tabs": "^3.0.0",
    "react-tooltip-lite": "^1.10.0",
    "remark-gfm": "^1.0.0",
    "sanitize-filename": "^1.6.1",
    "semver": "^7.3.4",
    "sentence-case": "^3.0.3",
    "source-map-support": "^0.5.0",
    "spectron-menu-addon": "^0.3.3",
    "temp": "^0.9.4",
    "title-case": "^3.0.2",
    "trie-search": "^1.2.8",
    "typescript-collections": "^1.3.3",
    "uuid": "^3.3.2",
    "webpack-dev-middleware": "^3.4.0",
    "winston": "^3.0.0",
    "xlsx": "^0.17.2",
    "xml-name-validator": "^3.0.0",
    "xml2js": "^0.4.19",
    "xmlbuilder": "^10.1.1",
    "xmldom": "^0.6.0",
    "xpath": "^0.0.27"
  },
  "//remember to match this with github actions in main.yml": "",
  "engines": {
    "node": "16"
  },
  "devEngines": {
    "node": "16",
    "npm": ">=3.x"
  },
  "packageManager": "yarn@3.1.0"
}
